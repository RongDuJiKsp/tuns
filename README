TUNS usage in 2024
you can use heigh version ruby
You don't need to rake base32 
use `sudo gem install base32`(Use sudo because of you need to run as root)
then run 
client:`tuns-client -I lib -d <domain>` (use -I because "require" need to find package in $LOAD_PATH ,but over ruby 1.9 ./ not in $LOAD_PATH)
server `tuns-server -I lib -d <domain>`
==================================
TUNS - a simple IP over DNS tunnel
==================================
(c) Lucas Nussbaum <lucas@lucas-nussbaum.net>
Licensed under GPL v3 or later (see COPYING file)

TUNS is a prototype implementation of an IP over DNS tunnel. It is provided
here in the interest of reproducibility of scientific results, so that
evaluations that were carried out can be reproduced by others.

Its main features are:
- simplicity: it's thought to be as simple as possible.
  + no complex DNS stuff (TXT records, EDNS0, ...) ; uses only CNAME records
  + no splitting of IP packets: sets the MTU and forgets about it
- efficiency
  + it's optimized for low latency

Please note that using TUNS on networks that you don't totally control is
illegal in many countries. As stated above, TUNS is only provided so that you
can reproduce results obtained with it, in experimental setups. If you take the
decision to use it for something else, the author of TUNS can't be held
responsible. If you are unsure, please consult with a lawyer.

Installation
------------
There is no real installation script.
* uncompress the tarball.
* install packages needed to build base32.so (in Debian: rake, ruby1.8-dev)
* build base32.so:
  cd base32-0.1.1
  rake
  cd ..
  cp base32-0.1.1/ext/base32.so .
* then you can run tuns-client or tuns-server. (see below)

Usage
-----
You need to delegate a DNS zone (using NS records) to the system where TUNS
will run. In the following example, we use dnstunnel.tuns.net.

Client: as root, run tuns-client -d dnstunnel.tuns.net
Server: as root, run tuns-server -d dnstunnel.tuns.net

There's a number of possible options you can use to change default values.
See tuns-client -h and tuns-server -h.

After starting the client, type 'help' to get the online help.

Troubleshooting
---------------
The meaning of characters output in client's verbose mode is documented at the
start of the tuns-client file. It can help to understand what's wrong.

License
-------
The base32 module is licensed under a permissive non-copylefted free software
license (see http://base32.rubyforge.org/svn/trunk/COPYING -- the COPYING file
wasn't included in the base32 tarball).

TUNS is licensed under GPL version 3, or any later version. See the COPYING
file.
